// src/App.js

import React, { useState } from 'react'; // Import React and the useState hook

function App() {
  // 1. State for the list of todo items
  const [todos, setTodos] = useState([]); // Initialize with an empty array

  // 2. State for the value of the input field
  const [inputValue, setInputValue] = useState(''); // Initialize with an empty string

  // Function to handle adding a new todo item
  const handleAddTodo = () => {
    // Basic validation: Don't add empty todo items
    if (inputValue.trim() === '') {
      alert('Please enter a todo item!');
      return; // Stop the function if input is empty
    }

    // Update the 'todos' state:
    // Create a NEW array by spreading the existing 'todos' and adding the new 'inputValue'.
    // This is crucial for React to detect the state change and re-render.
    setTodos([...todos, inputValue]);

    // Clear the input field after adding the todo
    setInputValue('');
  };

  // Prepare an array to hold our list item (<li>) elements
  // We'll populate this array using a for loop.
  const todoListItems = [];
  for (let i = 0; i < todos.length; i++) {
    // For each todo string in the 'todos' array, create an <li> element.
    // The 'key' prop is important for React to efficiently update lists.
    // Using the index (i) is acceptable for this simple, non-reordering list.
    todoListItems.push(
      <li key={i}>{todos[i]}</li>
    );
  }

  return (
    <div className="App">
      <h1>My Awesome Todo List</h1>

      <div>
        {/* Input field for new todos */}
        <input
          type="text"
          placeholder="Add a new todo..."
          value={inputValue} // Makes this a controlled component: input value reflects state
          onChange={(event) => setInputValue(event.target.value)} // Updates state when input changes
          // Optional: Allows adding a todo by pressing the Enter key
          onKeyPress={(event) => {
            if (event.key === 'Enter') {
              handleAddTodo();
            }
          }}
        />
        {/* Button to add the todo */}
        <button onClick={handleAddTodo}>Add Todo</button>
      </div>

      <h2>Your Todos:</h2>
      {/* Unordered list to display the todo items */}
      <ul>
        {todoListItems} {/* Render the array of <li> elements generated by the loop */}
      </ul>
    </div>
  );
}

export default App; // Export the App component so it can be used in other files (like index.js)